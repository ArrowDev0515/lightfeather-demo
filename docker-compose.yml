version: "2.12.1"

volumes:
  mysql_config:
  mysql_data:
    
services:
  config-service:
    container_name: config_service
    image: config-service:${VERSION}
    build:
      context: ./Backend/ConfigServer
      dockerfile: Dockerfile
      target: config_service
    depends_on:
      backend-database:
        condition: service_healthy
    ports:
      - "${CONFIG_SERVER_PORT}:${CONFIG_SERVER_PORT}"
    command: ["java", "-jar", "/config-service.jar"]

  discovery-service:
    container_name: discovery_service
    image: discovery-service:${VERSION}
    build:
      context: ./Backend/DiscoveryServer
      dockerfile: Dockerfile
      target: discovery_service
    depends_on:
      backend-database:
        condition: service_healthy
    ports:
      - "${DISCOVERY_SERVER_PORT}:${DISCOVERY_SERVER_PORT}"
    command: ["./wait-for", "config-service:${CONFIG_SERVER_PORT}", "-t 0", "--", "java", "-Dspring.profiles.active=docker", "-jar", "/discovery-service.jar"]

  api-gateway:
    container_name: api_gateway
    image: api-gateway:${VERSION}
    build:
      context: ./Backend/ApiGateway
      dockerfile: Dockerfile      
      target: api_gateway
    depends_on:
      - "discovery-service"
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    command: ["./wait-for", "discovery-service:${DISCOVERY_SERVER_PORT}", "-t 0", "--", "java", "-Dspring.profiles.active=docker", "-jar", "/api-gateway.jar"]
    
  backend-database:
    container_name: backend_database
    image: mysql:5.7
    build:
      target: backend_database
    ports:
      - "${BACKEND_DB_PORT}:${BACKEND_DB_PORT}"
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_config:/etc/mysql/conf.d
      - ./Backend/BackendDatabase/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - "MYSQL_ROOT_PASSWORD="
      - "MYSQL_ALLOW_EMPTY_PASSWORD=true"
      - "MYSQL_USER=${BACKEND_DB_USER}"
      - "MYSQL_PASSWORD=${BACKEND_DB_PASSWORD}"
      - "MYSQL_DATABASE=${BACKEND_DB_DATABASE}"
    healthcheck:
      test: "/usr/bin/mysql --user=${BACKEND_DB_USER} --password=${BACKEND_DB_PASSWORD} --execute \"SHOW DATABASES;\""
      interval: 3s
      timeout: 5s
      retries: 5
    
  backend-service:
    container_name: backend_service
    image: backend-service:${VERSION}
    build:
      context: ./Backend/BackendService
      dockerfile: Dockerfile
      target: backend_service
    depends_on:
      - "discovery-service"
    ports:
      - "${BACKEND_SERVER_PORT}:${BACKEND_SERVER_PORT}"
    command: ["./wait-for", "discovery-service:${DISCOVERY_SERVER_PORT}", "-t 0", "--", "java", "-Dspring.profiles.active=docker", "-jar", "/backend-service.jar"]

  frontend-service:
    container_name: frontend_service
    image: frontend-service:${VERSION}
    build:
      context: ./Frontend
      dockerfile: Dockerfile
      target: frontend_service
    depends_on:
      - "api-gateway"
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    command: ["./wait-for", "api-gateway:${API_GATEWAY_PORT}", "-t 0", "--", "npm", "run", "dev"]

